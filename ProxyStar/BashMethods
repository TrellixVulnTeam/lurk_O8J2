####addTask.sh
#!/bin/sh

domainName=$1
lifeTime=$2
cronTaskID=$3
day=$(date +%d) #returns current day
deadLineD=$(date -d "today + $lifeTime days" +'%d') #returns deadline in day month format, e.g. 19 06 as 2 parameters
deadLineM=$(date -d "today + $lifeTime days" +'%m')
touch myCron
crontab -l > myCron
#Decide best time of the day for the renewal following these:
echo "50 8 $day * * sh /root/exeAutoRenew.sh  $domainName $deadLineD $deadLineM $cronTaskID" >> myCron
#echo "0 0 $day * * sh /root/exeAutoRenew.sh  $domainName $deadLineD $deadLineM $cronTaskID" >> myCron 
crontab myCron
rm myCron

####certbotCall.sh
#!/bin/sh
domainName=$1
#crontaskID=$2
#operationCode=$3 #1 for first certificate, 2 for renewal

cd /root/certbot/certbot

        a=" --csr ../../tmpCsr --agree-tos -m tutatis@gmail.com --renew-by-default -d $domainName"
        b=" --server http://172.17.0.4:4000/directory -q --webroot -w /var/www/$domainName/html"


#Executes Certbot
python main.py certonly $a $b

####exeAutoRenew.sh
#!/bin/bash

if [ "$#" -ne 4 ]; then
    echo "Illegal number of parameters"
    exit 1
fi
domainName=$1 # e.g. bye.com
getDeadLineD=$2 # "day month" format, e.g. 19 06
getDeadLineM=$3 # "day month" format, e.g. 19 06
cronTaskID=$4 # integer

#Gets the uri using cronTaskID
file="/root/starCerts/links/link$cronTaskID"
uri=$(cat "$file")
#Removes old certificate
rm "/root/starCerts/$uri/certificate.pem"
cd /root/certbot/certbot
if date "+%d %m" | grep -q "$getDeadLineD $getDeadLineM"; then
       echo "Lifetime expires"
       crontab -u root -l | grep -v "$domainName $getDeadLineD $getDeadLineM $crontaskID" | crontab -u root -
else
        echo "Renews cert"
        a=" --csr ../../starCerts/$uri/csr$cronTaskID --agree-tos -m tutatis@gmail.com --renew-by-default -d $domainName"
        b=" --server http://172.17.0.4:4000/directory --webroot -w /var/www/$domainName/html"
        c=" --fullchain-path ../../starCerts/$uri/certificate.pem"
#Changes the content of STARValidityCertbot
validity=$(cat "../../starCerts/$uri/validity$cronTaskID")
echo "Validity is : $validity"
if [ -f /root/STARValidityCertbot ]; then
        rm -rf /root/STARValidityCertbot
fi
echo $validity > /root/STARValidityCertbot
#Executes Certbot with the old csr
python main.py certonly $a $b $c

#Removes tmpFiles
cd /root/
rm certId
rm ObtainedCERT.pem
rm STARValidityCertbot
fi

####getCsrAsText.sh
#!/bin/bash

openssl req -in tmpCsr -noout -text
